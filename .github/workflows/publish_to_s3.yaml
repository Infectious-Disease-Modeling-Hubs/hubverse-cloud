name: Upload hub data to cloud storage

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  # Hubverse AWS account number
  AWS_ACCOUNT: 767397675902

permissions:
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest
    # write permissions required to fetch a token for AWS authorization
    permissions:
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get hub cloud config
      # save cloud-related fields from admin config as environment variables
      # (jq is installed on Github-hosted runners)
      run: |
        cloud_enabled=$(cat ./hub-config/admin.json | jq -r '.cloud.enabled') \
          && echo "CLOUD_ENABLED=$cloud_enabled"
        cloud_host=$(cat ./hub-config/admin.json | jq -r '.cloud.host.name') \
          && echo "CLOUD_HOST=$cloud_host"
        cloud_storage_service=$(cat ./hub-config/admin.json | jq -r '.cloud.host.storage_service') \
          && echo "CLOUD_STORAGE_SERVICE=$cloud_storage_service"
        cloud_storage_location=$(cat ./hub-config/admin.json | jq -r '.cloud.host.storage_location') \
          && echo "CLOUD_STORAGE_LOCATION=$cloud_storage_location"
        echo "CLOUD_ENABLED=$cloud_enabled" >> $GITHUB_ENV
        echo "CLOUD_HOST=$cloud_host" >> $GITHUB_ENV
        echo "CLOUD_STORAGE_SERVICE=$cloud_storage_service" >> $GITHUB_ENV
        echo "CLOUD_STORAGE_LOCATION=$cloud_storage_location" >> $GITHUB_ENV

    - name: Configure AWS credentials
      if: env.CLOUD_ENABLED == 'true'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.CLOUD_STORAGE_LOCATION }}
        aws-region: us-east-1

    - name: Sync files to cloud storage
      if: env.CLOUD_ENABLED == 'true'
      run: |
        aws s3 sync ./hub-config "s3://$CLOUD_STORAGE_LOCATION/hub-config" --delete
        aws s3 sync ./model-metadata "s3://$CLOUD_STORAGE_LOCATION/model-metadata" --delete
        aws s3 sync ./model-output "s3://$CLOUD_STORAGE_LOCATION/raw/model-output" --delete
      env:
        CLOUD_STORAGE: ${{ env.CLOUD_STORAGE_LOCATION }}
