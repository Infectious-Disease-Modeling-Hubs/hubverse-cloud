name: Publish to S3

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Read cloud config
      # parse cloud-related fields from admin config
      # (jq is installed on Github-hosted runners)
      run: |
        echo "CLOUD_ENABLED=$(cat ./hub-config/admin.json | jq -r '.cloud.enabled')">> $GITHUB_ENV
        echo "CLOUD_PLATFORM=$(cat ./hub-config/admin.json | jq -r '.cloud.host.name')">> $GITHUB_ENV
        echo "CLOUD_STORAGE=$(cat ./hub-config/admin.json | jq -r '.cloud.host.storage')">> $GITHUB_ENV

    - name: Output cloud config
      run: |
        echo "Cloud enabled: $CLOUD_ENABLED"
        echo "Cloud platform: $CLOUD_PLATFORM"
        echo "Cloud storage name (S3 bucket, for example): $CLOUD_STORAGE"
      env:
        CLOUD_ENABLED: ${{ env.CLOUD_ENABLED }}
        CLOUD_PLATFORM: ${{ env.CLOUD_PLATFORM }}
        CLOUD_STORAGE: ${{ env.CLOUD_STORAGE }}

    - name: Configure AWS credentials
      if: env.CLOUD_ENABLED == 'true'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::767397675902:role/${{ env.CLOUD_STORAGE }}
        aws-region: us-east-1

    - name: Copy files to S3
      if: env.CLOUD_ENABLED == 'true'
      run: |
        aws s3 sync ./hub-config "s3://$CLOUD_STORAGE/hub-config" --delete
        aws s3 sync ./model-metadata "s3://$CLOUD_STORAGE/model-metadata" --delete
        aws s3 sync ./model-output "s3://$CLOUD_STORAGE/raw/model-output" --delete
      env:
        CLOUD_STORAGE: ${{ env.CLOUD_STORAGE }}
